// https://www.tinkercad.com/things/8OghIo2oWMM-copy-of-grand-turing/editel?tenant=circuits

#include <Keypad.h>
#include <LiquidCrystal.h>

#define NO_BOTON 4
#define BOTON_1 1
#define BOTON_2 2
#define BOTON_3 3

LiquidCrystal lcd(8,13,A0,A1,A2,A3);

int cont=0;	   // contador de caracteres ingresados
int contDos=0; // contador de caractere para la contraseña determinada
int flagUno=1; // banderas para mostrar Password: una sola vez
int flagDos=1; // banderas para mostrar Password: una sola vez
int contLetrasPassColumna=9; //para escribir despues de los dos puntos de Password: <--
int contLetrasPassFila=0;	 //para escribir en la primera linea 

int retornoTest=5;

unsigned long millisAntes=0;
long intervalo=1000;
int estadoLed=LOW;
int contadorParpadeo=0;
int flagTest=0;

int botonAntes= NO_BOTON;
int botonAhora;

int flagConfig=0;

int contPass=1;

String contraseniaAux;   // string auxiliar para asignar al string principal.
String contraseniaIngresada; 	//string al que se le asignan los caracteres ingresados

String passConfigurada = "2C2021";  // string que contiene la contraseña configurada
String passConfiguradaAux;
const byte ROWS = 4;
const byte COLS = 4; 
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {7, 6, 5, 4};
byte colPins[COLS] = {3, 2, 1, 0};

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

void setup(){
 // Serial.begin(9600);
  pinMode(9,OUTPUT);
  lcd.begin(16,2);
  
  
}
int testear(String, String);



void loop(){

  int thisNote;
  unsigned long millisAhora=millis();
  char key = keypad.getKey();
  
  
  //-----------MOSTRAR PASS UNA VEZ-------------/
  if(flagUno==1)
  {
    lcd.print("Password: ");
    flagUno=0;
  }
  
  //--------------------------------------------/
  
  //----------GUARDAR PASS ---------------------/
        if (key != NO_KEY )
      {
        lcd.setCursor(contLetrasPassColumna,contLetrasPassFila);
        lcd.print(key);
          
          if(contPass==1 && (contraseniaIngresada.concat(key))==true) // concatena el char que devolvio "key" a un string
          {
            cont++;  // contador para que varifique la contraseña automaticamente
          }
      
         
        contLetrasPassColumna++;
        if(contLetrasPassColumna==16)
        {
          contLetrasPassColumna=0; //reseteo el valor para poder escribir desde el principio de la linea
          contLetrasPassFila++;    //paso a la linea de abajo
        }
        
      }
  //--------------------------------------------/
  
  if(key != NO_KEY &&flagConfig==1)
  {
    passConfiguradaAux.concat(key);// concatena el char que devolvio "key" a un string
    contDos++;
  }
    
  
  
  
  int boton=leerBoton();
	
  if(boton!=NO_BOTON && boton != botonAntes || cont==7)
  {
    //Serial.println(boton);
    if(boton==BOTON_1)
    {
      reset();
    }else
    {
      if(boton==BOTON_2 || cont==7)
      { 
      retornoTest=testear(contraseniaIngresada, passConfigurada);
      flagTest=1;
      }else
      {
        if(boton==BOTON_3)
        {
      
      contLetrasPassColumna=0;
      contLetrasPassFila=0;
      lcd.setCursor(contLetrasPassColumna,contLetrasPassFila); // seteo el la placa esa para que escriba del principio xd
      lcd.clear();
      lcd.print("New Password: ");
      contLetrasPassColumna=13;

      contPass=0;
      flagConfig=1;

     
        
        }
      }
     }
    }
    botonAntes = boton; 
    
       if(contDos==7)
       {
        lcd.clear();
        passConfigurada=passConfiguradaAux;
        lcd.print("PW changed!");
        contDos=0;
        contPass=1;
        flagConfig=0;
        passConfiguradaAux="";
      }      
  
 
  if(retornoTest==1)
  {
    if(millisAhora-millisAntes >=intervalo && flagTest==1)
    {
      millisAntes=millisAhora;
      if(estadoLed==LOW && contadorParpadeo<6)
      {
        analogWrite(10,0);
      	analogWrite(9,255);
        estadoLed=HIGH;
        contadorParpadeo++;
      
      }else
      {
        if(estadoLed==HIGH && contadorParpadeo<6)
        {
          analogWrite(10,0);
       	analogWrite(9,0);
         estadoLed=LOW; 
         contadorParpadeo++;     
        }
        if(contadorParpadeo==6)
        {
          analogWrite(10,255);
          contadorParpadeo=0;
          flagTest=0;
          retornoTest=5;
        }
      }
    }

  }
  
   if(retornoTest==0)
  {
    if(millisAhora-millisAntes >=intervalo && flagTest==1)
    {
      millisAntes=millisAhora;
      if(estadoLed==LOW && contadorParpadeo<6)
      {
        analogWrite(10,0);
      	analogWrite(11,255);
        estadoLed=HIGH;
        contadorParpadeo++;
      
      }else
      {
        if(estadoLed==HIGH && contadorParpadeo<6)
        {
         analogWrite(10,0);
       	 analogWrite(11,0);
         estadoLed=LOW; 
         contadorParpadeo++;     
        }
        if(contadorParpadeo==6)
        {
          analogWrite(10,255);
          contadorParpadeo=0;
          flagTest=0;
          retornoTest=5;
       	}
       }
     }
   }
 
	
  delay(15);
}

int leerBoton()
{
	int valorA4=analogRead(A4);
  	int retorno= NO_BOTON;

  	if(valorA4>246 && valorA4<266)
  		retorno=BOTON_1;
  
  	if(valorA4>399 && valorA4<419)
		retorno=BOTON_2;
      
    if(valorA4>502 && valorA4<522)
		retorno=BOTON_3;

	return retorno;
}

void reset()
{

       contLetrasPassColumna=0;
       contLetrasPassFila=0;
       lcd.setCursor(contLetrasPassColumna,contLetrasPassFila); // seteo el la placa esa para que escriba del principio xd
       lcd.clear();
       lcd.print("Password:         ");
       contLetrasPassColumna=9; // vuelvo a asignar el valor necesario para escribir apartir de los dos puntos
       flagDos=0;
       digitalWrite(9,LOW);
       digitalWrite(10,LOW);
  	   digitalWrite(11,LOW);
    contraseniaIngresada=contraseniaAux; // Borro info de cantraseniaIngresada

}

int testear(String, String)
{
	int retorno;
    if(contraseniaIngresada.equals(passConfigurada)==true) // comparo strings, si son iguales prende el led verde
    {
      lcd.clear();
      lcd.print("Password: OK");
      digitalWrite(9,HIGH);
      cont=0;
      retorno=1;
    }
    else {
      lcd.clear();
      lcd.print("Password: ERROR");
      digitalWrite(11,HIGH);
      cont=0;
      retorno=0;
    }
	return retorno;
}